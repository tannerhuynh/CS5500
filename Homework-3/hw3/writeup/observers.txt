The observer pattern was written with two interfaces, one for the subject being observed and the observer. Multiple observers and subjects can be written that are modular and do not depend on one another. A separate logger class is created that logs every observer update. All code is well documented and structured. This structure allows other developers to create more observers and subjects easily.

There are tests for every method except notify observers. I was unable to figure out how to test a logger. I tested adding all observers and removing observers. The test included removing observers that were not added and removing from an empty list. The get and set state was pretty simple to test. 